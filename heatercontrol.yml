blueprint:
  name: Temperature-controlled Heater Automation with Dynamic Inputs
  description: Turns a heater on or off based on dynamic temperature and time settings.
  domain: automation
  input:
    heater_switch:
      name: Heater Switch
      description: The switch that controls the heater
      selector:
        entity:
          domain: switch
    temp_sensor:
      name: Temperature Sensor
      description: Sensor to monitor the room's temperature
      selector:
        entity:
          domain: sensor
    min_temp_input:
      name: Minimum Temperature Input
      description: Input number entity for setting the minimum temperature
      selector:
        entity:
          domain: input_number
    max_temp_input:
      name: Maximum Temperature Input
      description: Input number entity for setting the maximum temperature
      selector:
        entity:
          domain: input_number
    start_time_input:
      name: Start Time Input
      description: Input datetime entity for setting the start time
      selector:
        entity:
          domain: input_datetime
    end_time_input:
      name: End Time Input
      description: Input datetime entity for setting the end time
      selector:
        entity:
          domain: input_datetime
    enable_switch:
      name: Enable Switch
      description: Input boolean to enable or disable the automation
      selector:
        entity:
          domain: input_boolean

trigger:
  - platform: state
    entity_id: !input "temp_sensor"

condition:
  - condition: time
    after: "{{ states(!input 'start_time_input') }}"
    before: "{{ states(!input 'end_time_input') }}"
  - condition: state
    entity_id: !input "enable_switch"
    state: 'on'

action:
  - choose:
      - conditions:
          - condition: numeric_state
            entity_id: !input "temp_sensor"
            below: "{{ states(!input 'min_temp_input') | float }}"
        sequence:
          - service: switch.turn_on
            target:
              entity_id: !input "heater_switch"
      - conditions:
          - condition: numeric_state
            entity_id: !input "temp_sensor"
            above: "{{ states(!input 'max_temp_input') | float }}"
        sequence:
          - service: switch.turn_off
            target:
              entity_id: !input "heater_switch"